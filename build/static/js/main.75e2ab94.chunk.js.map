{"version":3,"sources":["constants.js","utils.js","components/Piano/Piano.js","components/Piano/index.js","components/PianoWaterfall/index.js","components/PianoWaterfall/PianoWaterfall.js","components/MenuBar/MenuBar.js","components/MenuBar/index.js","pages/App/App.js","pages/App/index.js","index.js"],"names":["BASES","C","D","E","F","G","A","B","getMidiNumberFromNote","note","p","Array","isArray","str","m","exec","split","base","toUpperCase","alt","replace","length","fifths","substring","parse","PianoOctave","number","activeNotes","onPlayNote","onStopNote","undefined","Error","notes","Object","keys","isNoteActive","midi","includes","toString","className","map","value","active","half","slice","PianoNote","props","noteName","CHROMATIC","Math","floor","getNoteFromMidiNumber","date-key","onMouseDown","onMouseUp","Piano","octaves","_","index","PianoWaterfall","Date","now","MenuItem","onClick","children","MenuBar","isRecording","isPlayingRecording","onStartRecording","onStopRecording","onPlayRecording","onResetRecording","onLoop","icon","faStop","faPlay","color","size","faCircle","faSyncAlt","faCog","ac","AudioContext","App","useState","socket","setSocket","instrument","setInstrument","instrumentName","setInstrumentName","instrumentsList","setInstrumentsList","setActiveNotes","volume","setVolume","sustain","setSustain","transposition","setTransposition","midiAccess","setMidiAccess","currentInput","setCurrentInput","currentOutput","setCurrentOutput","message","setMessage","setIsPlayingRecording","setIsRecording","startRecordingTime","setStartRecordingTime","endRecordingTime","setEndRecordingTime","looping","setLooping","recordingTimer","setRecordingTimer","track","setTrack","latency","setLatency","startTimer","startTime","interval","setInterval","date","getUTCHours","getUTCMinutes","getUTCSeconds","formatTime","useCallback","pitch","velocity","emitEvent","play","currentTime","gain","loop","prev","type","time","delta","emit","setTimeout","stop","handleMidiMessage","msg","command","data","channel","parseMidiMessage","transposedPitch","console","debug","beginTime","timer","lastEvent","event","recordingDuration","durationUntilLastEvent","clearInterval","changeInstrument","name","a","options","from","SoundfontPlayer","useEffect","socketio","connect","transports","on","fetch","response","json","navigator","requestMIDIAccess","access","inputs","values","id","handleNoteOn","handleNoteOff","off","onmidimessage","outputDevice","outputs","output","input","send","style","display","marginTop","fontSize","onChange","e","currentTarget","device","instr","alignItems","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.75e2ab94.chunk.js","sourcesContent":["export const CHROMATIC = [\r\n  \"C\",\r\n  \"Db\",\r\n  \"D\",\r\n  \"Eb\",\r\n  \"E\",\r\n  \"F\",\r\n  \"Gb\",\r\n  \"G\",\r\n  \"Ab\",\r\n  \"A\",\r\n  \"Bb\",\r\n  \"B\",\r\n];\r\n\r\nexport const BASES = {\r\n  C: [0, 0],\r\n  D: [2, -1],\r\n  E: [4, -2],\r\n  F: [-1, 1],\r\n  G: [1, 0],\r\n  A: [3, -1],\r\n  B: [5, -2],\r\n};\r\n","import { BASES } from \"./constants\";\r\n\r\nexport const split = (str) =>\r\n  /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)(\\/\\d+|)\\s*(.*)\\s*$/.exec(str);\r\n\r\nexport const parse = (str) => {\r\n  const m = split(str);\r\n  if (!m || m[5]) return null;\r\n\r\n  const base = BASES[m[1].toUpperCase()];\r\n  let alt = m[2].replace(/x/g, \"##\").length;\r\n  if (m[2][0] === \"b\") alt *= -1;\r\n  const fifths = base[0] + 7 * alt;\r\n  if (!m[3]) return [fifths];\r\n  const oct = +m[3] + base[1] - 4 * alt;\r\n  const dur = m[4] ? +m[4].substring(1) : null;\r\n  return [fifths, oct, dur];\r\n};\r\n\r\nexport const getMidiNumberFromNote = (note) => {\r\n  if (\r\n    (typeof note === \"number\" || typeof note === \"string\") &&\r\n    note > 0 &&\r\n    note < 128\r\n  )\r\n    return +note;\r\n  const p = Array.isArray(note) ? note : parse(note);\r\n  if (!p || p.length < 2) return null;\r\n  return p[0] * 7 + p[1] * 12 + 12;\r\n};\r\n\r\nexport const getNoteFromMidiNumber = (note) => {\r\n  const name = CHROMATIC[note % 12];\r\n  const oct = Math.floor(note / 12) - 1;\r\n  return name + oct;\r\n};\r\n\r\nexport const parseMidiMessage = (message) => {\r\n  return {\r\n    command: message.data[0] >> 4,\r\n    channel: message.data[0] & 0xf,\r\n    pitch: message.data[1],\r\n    velocity: message.data[2] / 127,\r\n  };\r\n};\r\n\r\nexport const formatTime = (date) => {\r\n  const hours =\r\n    date.getUTCHours() < 10 ? \"0\" + date.getUTCHours() : date.getUTCHours();\r\n  const minutes =\r\n    date.getUTCMinutes() < 10\r\n      ? \"0\" + date.getUTCMinutes()\r\n      : date.getUTCMinutes();\r\n  const seconds =\r\n    date.getUTCSeconds() < 10\r\n      ? \"0\" + date.getUTCSeconds()\r\n      : date.getUTCSeconds();\r\n  return hours + \":\" + minutes + \":\" + seconds;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { BASES } from \"../../constants\";\r\nimport { getNoteFromMidiNumber, getMidiNumberFromNote } from \"../../utils\";\r\n\r\nimport \"./Piano.scss\";\r\n\r\nconst Piano = ({ octaves, activeNotes, onPlayNote, onStopNote }) => {\r\n  if (!octaves || octaves < 1 || octaves > 9)\r\n    throw new Error(\"Number of octaves not defined or outside valid range\");\r\n\r\n  return (\r\n    <div className=\"piano\">\r\n      {[...Array(octaves)].map((_, index) => (\r\n        <PianoOctave\r\n          key={index}\r\n          number={index}\r\n          activeNotes={activeNotes}\r\n          onPlayNote={onPlayNote}\r\n          onStopNote={onStopNote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PianoOctave = ({ number, activeNotes, onPlayNote, onStopNote }) => {\r\n  if (number === undefined || number == null || number < 0 || number > 9)\r\n    throw new Error(\r\n      \"The octave \" + number + \" doesn't exists in a piano: valid range [0:8]\"\r\n    );\r\n\r\n  let notes = Object.keys(BASES);\r\n\r\n  // if (number === 0) {\r\n  //   notes = [\"A\", \"B\"];\r\n  // } else if (number === 8) {\r\n  //   notes = [\"C\"];\r\n  // }\r\n\r\n  const isNoteActive = (note) => {\r\n    const midi = getMidiNumberFromNote(note);\r\n    const res = Object.keys(activeNotes).includes(midi.toString());\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <div className=\"piano-octave\">\r\n      <div className=\"piano-octave-white\">\r\n        {notes.map((value) => (\r\n          <PianoNote\r\n            key={value + number}\r\n            note={value + number}\r\n            active={isNoteActive(value + number)}\r\n            onPlayNote={onPlayNote}\r\n            onStopNote={onStopNote}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"piano-octave-black\">\r\n        <PianoNote half />\r\n        {notes.slice(1).map((value) => (\r\n          <PianoNote\r\n            key={value + \"b\" + number}\r\n            note={value + \"b\" + number}\r\n            active={isNoteActive(value + \"b\" + number)}\r\n            onPlayNote={onPlayNote}\r\n            onStopNote={onStopNote}\r\n          />\r\n        ))}\r\n        <PianoNote half />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PianoNote = ({\r\n  note,\r\n  half,\r\n  active,\r\n  onPlayNote,\r\n  onStopNote,\r\n  ...props\r\n}) => {\r\n  if (half) return <button className=\"black hidden half\" />;\r\n\r\n  if (note.includes(\"Fb\")) return <button className=\"black hidden\" />;\r\n\r\n  let noteName = note;\r\n  if (typeof noteName === \"number\") noteName = getNoteFromMidiNumber(noteName);\r\n\r\n  return (\r\n    <button\r\n      className={\r\n        (noteName.includes(\"b\") ? \"black\" : \"white\") + (active ? \" active\" : \"\")\r\n      }\r\n      date-key={noteName}\r\n      onMouseDown={() => onPlayNote(getMidiNumberFromNote(noteName), 1, true)}\r\n      onMouseUp={() => onStopNote(getMidiNumberFromNote(noteName), true)}\r\n      {...props}\r\n    >\r\n      {noteName.includes(\"b\") ? null : noteName}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Piano;\r\n","import Piano from \"./Piano\";\r\n\r\nexport default Piano;\r\n","import PianoWaterfall from \"./PianoWaterfall\";\r\n\r\nexport default PianoWaterfall;\r\n","import React from \"react\";\r\n\r\nimport { BASES } from \"../../constants\";\r\n\r\nimport \"./PianoWaterfall.scss\";\r\n\r\nconst PianoWaterfall = ({ octaves }) => {\r\n  const notes = [\r\n    { start: Date.now(), duration: 1, pitch: 42, velocity: 0.7 },\r\n    { start: Date.now() + 1, duration: 1, pitch: 43, velocity: 0.9 },\r\n    { start: Date.now() + 2, duration: 1, pitch: 43, velocity: 0.9 },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"piano-waterfall\">\r\n      {/* {[...Array(octaves)].map((octave, index) => (\r\n        <PianoWaterfallOctave key={index} number={octave} notes={notes} />\r\n      ))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PianoWaterfallOctave = ({ number, notes }) => {\r\n  const naturalNotes = Object.keys(BASES);\r\n\r\n  return (\r\n    <div className=\"piano-waterfall-octave\">\r\n      <div className=\"piano-waterfall-octave-black\">\r\n        <PianoWaterfallColumn half />\r\n        {naturalNotes.map((value) => (\r\n          <PianoWaterfallColumn\r\n            key={value + \"b\" + number}\r\n            note={value + \"b\" + number}\r\n          />\r\n        ))}\r\n        <PianoWaterfallColumn half />\r\n      </div>\r\n      <div className=\"piano-waterfall-octave-white\">\r\n        {naturalNotes.map((value) => (\r\n          <PianoWaterfallColumn key={value + number} note={value + number} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PianoWaterfallColumn = ({ note, half }) => {\r\n  if (half) return <div className=\"piano-waterfall-column hidden half\" />;\r\n\r\n  if (note.includes(\"Fb\"))\r\n    return <div className=\"piano-waterfall-column hidden\" />;\r\n\r\n  return (\r\n    <div className=\"piano-waterfall-column\">\r\n      {<PianoWaterfallNote start={Math.random() * 100} duration={20} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PianoWaterfallNote = ({ color, start, duration }) => {\r\n  return (\r\n    <div\r\n      className=\"piano-waterfall-note\"\r\n      style={{ backgroundColor: color, top: start, height: duration }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PianoWaterfall;\r\n","import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faStop,\r\n  faCircle,\r\n  faCog,\r\n  faSyncAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./MenuBar.scss\";\r\n\r\nconst MenuBar = ({\r\n  isRecording,\r\n  isPlayingRecording,\r\n  onStartRecording,\r\n  onStopRecording,\r\n  onPlayRecording,\r\n  onResetRecording,\r\n  onLoop,\r\n}) => {\r\n  const handleRecordingClick = () => {\r\n    if (isRecording) onStopRecording();\r\n    else onStartRecording();\r\n  };\r\n\r\n  const handlePlayRecordingClick = () => {\r\n    if (isPlayingRecording) onResetRecording();\r\n    else onPlayRecording();\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu-bar\">\r\n      <MenuItem onClick={handlePlayRecordingClick}>\r\n        <FontAwesomeIcon\r\n          icon={isPlayingRecording ? faStop : faPlay}\r\n          color=\"var(--button-color)\"\r\n          size=\"2x\"\r\n        />\r\n      </MenuItem>\r\n      <MenuItem onClick={handleRecordingClick}>\r\n        <FontAwesomeIcon\r\n          icon={faCircle}\r\n          color={\r\n            isRecording ? \"var(--rec-button-color)\" : \"var(--button-color)\"\r\n          }\r\n          size=\"2x\"\r\n        />\r\n      </MenuItem>\r\n      <MenuItem onClick={onLoop}>\r\n        <FontAwesomeIcon\r\n          icon={faSyncAlt}\r\n          color=\"var(--button-color)\"\r\n          size=\"2x\"\r\n        />\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <FontAwesomeIcon icon={faCog} color=\"var(--button-color)\" size=\"2x\" />\r\n      </MenuItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MenuItem = ({ onClick, children }) => {\r\n  return (\r\n    <button className=\"menu-item\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import MenuBar from \"./MenuBar\";\r\n\r\nexport default MenuBar;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport SoundfontPlayer from \"soundfont-player\";\nimport socketio from \"socket.io-client\";\n\nimport Piano from \"../../components/Piano\";\nimport PianoWaterfall from \"../../components/PianoWaterfall\";\nimport MenuBar from \"../../components/MenuBar\";\n\nimport { formatTime, parseMidiMessage } from \"../../utils\";\n\nimport \"./App.scss\";\n\nconst ac = new AudioContext();\nconst DEFAULT_INSTRUMENT = \"acoustic_grand_piano\";\nconst INSTRUMENTS_PATH =\n  \"https://raw.githubusercontent.com/danigb/soundfont-player/master/names/musyngkite.json\";\nconst SUSTAIN_DELAY = 1000;\n\nconst App = () => {\n  const [socket, setSocket] = useState(null);\n  const [instrument, setInstrument] = useState(null);\n  const [instrumentName, setInstrumentName] = useState(\"\");\n  const [instrumentsList, setInstrumentsList] = useState([]);\n  const [activeNotes, setActiveNotes] = useState({});\n\n  // Volume\n  const [volume, setVolume] = useState(1);\n\n  // Sustain\n  const [sustain, setSustain] = useState(false);\n\n  // Transpose\n  const [transposition, setTransposition] = useState(0);\n\n  // Midi Input/Output\n  const [midiAccess, setMidiAccess] = useState(null);\n  const [currentInput, setCurrentInput] = useState(\"none\");\n  const [currentOutput, setCurrentOutput] = useState(\"none\");\n\n  const [message, setMessage] = useState(\"🎵 Play some notes...\");\n\n  // Recording\n  const [isPlayingRecording, setIsPlayingRecording] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [startRecordingTime, setStartRecordingTime] = useState(null);\n  const [endRecordingTime, setEndRecordingTime] = useState(null);\n  const [looping, setLooping] = useState(false);\n  const [recordingTimer, setRecordingTimer] = useState(null);\n  const [track, setTrack] = useState([]);\n\n  // Metrics\n  const [latency, setLatency] = useState(null);\n\n  const startTimer = (startTime) => {\n    const interval = setInterval(() => {\n      const date = new Date(Date.now() - startTime);\n      setMessage(formatTime(date));\n    }, 1000);\n    setRecordingTimer(interval);\n\n    return interval;\n  };\n\n  const onPlayNote = useCallback(\n    (pitch, velocity, emitEvent) => {\n      if (velocity === null || velocity === undefined) velocity = 1;\n\n      const note = instrument.play(pitch, ac.currentTime, {\n        gain: velocity,\n        sustain: volume,\n        loop: 1,\n      });\n      setActiveNotes((prev) => {\n        return { ...prev, [pitch.toString()]: note };\n      });\n\n      if (isRecording) {\n        if (track.length === 0) {\n          const startTime = Date.now();\n          setStartRecordingTime(startTime);\n          startTimer(startTime);\n          setTrack((prev) => [\n            ...prev,\n            { type: \"note_on\", pitch, velocity, time: 0 },\n          ]);\n        } else {\n          const delta = Date.now() - startRecordingTime;\n          setTrack((prev) => [\n            ...prev,\n            { type: \"note_on\", pitch, velocity, time: delta },\n          ]);\n        }\n      }\n\n      if (emitEvent) socket.emit(\"note_on\", { pitch, velocity });\n    },\n    [socket, volume, isRecording, startRecordingTime, instrument, track]\n  );\n\n  const onStopNote = useCallback(\n    (pitch, emitEvent) => {\n      if (emitEvent) socket.emit(\"note_off\", { pitch });\n\n      setActiveNotes((prev) => {\n        if (pitch in prev) {\n          const note = prev[pitch];\n          if (sustain) setTimeout(() => note.stop(), SUSTAIN_DELAY * volume);\n          else note.stop();\n          delete prev[pitch];\n        }\n        return { ...prev };\n      });\n\n      if (isRecording) {\n        const delta = Date.now() - startRecordingTime;\n        setTrack((prev) => [\n          ...prev,\n          { type: \"note_off\", pitch, velocity: 0, time: delta },\n        ]);\n      }\n    },\n    [socket, isRecording, startRecordingTime]\n  );\n\n  const handleMidiMessage = useCallback(\n    (msg) => {\n      const { command, pitch, velocity } = parseMidiMessage(msg);\n\n      if (command !== 9 && command !== 8) return;\n\n      const transposedPitch = pitch + transposition * 12;\n\n      if (command === 8 || velocity === 0) onStopNote(transposedPitch, true);\n      else if (command === 9) onPlayNote(transposedPitch, velocity, true);\n    },\n    [transposition, onPlayNote, onStopNote]\n  );\n\n  const onStartRecording = () => {\n    console.debug(\"Recording started...\");\n    setTrack([]);\n    setStartRecordingTime(null);\n    setEndRecordingTime(null);\n    setMessage(\"00:00:00\");\n    setIsRecording(true);\n  };\n\n  const onStopRecording = () => {\n    console.debug(\"Recording ended...\", track);\n    setIsRecording(false);\n    setEndRecordingTime(Date.now());\n    clearInterval(recordingTimer);\n    setRecordingTimer(null);\n    setMessage(\"🎵 Play some notes...\");\n  };\n\n  const onPlayRecording = useCallback(() => {\n    console.debug(\"Playing recording...\", track);\n    setIsPlayingRecording(true);\n\n    const beginTime = Date.now();\n    const timer = startTimer(beginTime);\n\n    const lastEvent = track[track.length - 1];\n\n    for (const event of track) {\n      const now = Date.now();\n      const { type, pitch, velocity, time } = event;\n\n      const timeout = beginTime + time - now;\n\n      setTimeout(() => {\n        if (type === \"note_on\") onPlayNote(pitch, velocity, true);\n        else onStopNote(pitch, true);\n\n        // Is the last event\n        if (event === lastEvent) {\n          const recordingDuration = endRecordingTime - startRecordingTime;\n          const durationUntilLastEvent = Date.now() - beginTime;\n          setTimeout(() => {\n            clearInterval(timer);\n\n            // Handle loop or stop\n            if (looping) onPlayRecording();\n            else {\n              setMessage(\"🎵 Play some notes...\");\n              setIsPlayingRecording(false);\n            }\n          }, recordingDuration - durationUntilLastEvent);\n        }\n      }, timeout);\n    }\n  }, [\n    track,\n    looping,\n    endRecordingTime,\n    startRecordingTime,\n    onPlayNote,\n    onStopNote,\n  ]);\n\n  const onResetRecording = () => {\n    console.debug(\"Stopping recoring...\");\n    setMessage(\"Stopping recording...\");\n    setIsPlayingRecording(false);\n  };\n\n  const changeInstrument = async (name) => {\n    console.debug(\"Creating virtual instrument...\", name);\n    const options = { from: \"MusyngKite\" };\n    const instrument = await SoundfontPlayer.instrument(ac, name, options);\n    console.debug(\"Created virtual instrument\");\n    setInstrumentName(name);\n    setInstrument(instrument);\n  };\n\n  useEffect(() => {\n    console.debug(\"Creating socket...\");\n    const address = \"wss://151.15.81.174:5000\";\n    const socket = socketio.connect(address, { transports: [\"websocket\"] });\n    setSocket(socket);\n    console.debug(\"Connecting...\");\n\n    socket.on(\"connect\", async () => {\n      console.debug(\"Connected\");\n\n      console.debug(\"Getting instruments list...\");\n      const response = await fetch(INSTRUMENTS_PATH);\n      const data = await response.json();\n      setInstrumentsList(data);\n      console.debug(\"Done\");\n\n      // Set initial instrument\n      await changeInstrument(DEFAULT_INSTRUMENT);\n\n      const access = await navigator.requestMIDIAccess();\n      setMidiAccess(access);\n\n      // Set initial MIDI input\n      const inputs = Array.from(access.inputs.values());\n      if (inputs.length > 0) setCurrentInput(inputs[0].id);\n    });\n\n    socket.on(\"ping\", () => socket.emit(\"pong\"));\n    socket.on(\"latency\", setLatency);\n  }, []);\n\n  useEffect(() => {\n    if (!socket || !instrument) return;\n\n    const handleNoteOn = (data) => onPlayNote(data.pitch, data.velocity);\n    const handleNoteOff = (data) => onStopNote(data.pitch);\n\n    socket.on(\"note_on\", handleNoteOn);\n    socket.on(\"note_off\", handleNoteOff);\n\n    return () => {\n      socket.off(\"note_on\", handleNoteOn);\n      socket.off(\"note_off\", handleNoteOff);\n    };\n  }, [socket, instrument, isRecording]);\n\n  useEffect(() => {\n    if (!midiAccess || !currentInput) return;\n\n    console.debug(\"Updating input-output devices\", currentInput, currentOutput);\n\n    // Clear callbacks for all devices\n    for (let input of midiAccess.inputs.values())\n      input.onmidimessage = () => {};\n\n    // Search output device\n    let outputDevice = null;\n    for (let output of midiAccess.outputs.values())\n      if (output.id === currentOutput) outputDevice = output;\n\n    // Set input device\n    for (let input of midiAccess.inputs.values())\n      if (input.id === currentInput)\n        input.onmidimessage = (msg) => {\n          // Send output\n          if (outputDevice && msg.data[0] !== 254) outputDevice.send(msg.data);\n\n          handleMidiMessage(msg);\n        };\n\n    return () => {\n      for (let input of midiAccess.inputs.values())\n        input.onmidimessage = () => {};\n    };\n  }, [currentInput, currentOutput, midiAccess, handleMidiMessage]);\n\n  return (\n    <div className={\"App\" + (isRecording ? \" recording\" : \"\")}>\n      <header>\n        <div style={{ display: \"flex\" }}>\n          <div>\n            <p className=\"message\">{message}</p>\n            <p className=\"latency\">\n              Loop: {looping ? \"ON\" : \"OFF\"} | Latency: {latency} ms\n            </p>\n          </div>\n          <div>\n            <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n              <p style={{ fontSize: \"16px\" }}>Midi input</p>\n              <select\n                value={currentInput}\n                onChange={(e) => setCurrentInput(e.currentTarget.value)}\n              >\n                {midiAccess &&\n                  Array.from(midiAccess.inputs.values()).map((device) => (\n                    <option key={device.id} value={device.id}>\n                      {device.name}\n                    </option>\n                  ))}\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n            <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n              <p style={{ fontSize: \"16px\" }}>Midi output</p>\n              <select\n                value={currentOutput}\n                onChange={(e) => setCurrentOutput(e.currentTarget.value)}\n              >\n                {midiAccess &&\n                  Array.from(midiAccess.outputs.values()).map((device) => (\n                    <option key={device.id} value={device.id}>\n                      {device.name}\n                    </option>\n                  ))}\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n            <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n              <p style={{ fontSize: \"16px\" }}>Instrument</p>\n              <select\n                value={instrumentName}\n                onChange={(e) => changeInstrument(e.currentTarget.value)}\n              >\n                {instrumentsList.map((instr, index) => (\n                  <option key={index} value={instr}>\n                    {instr}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div>\n            <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n              <p style={{ fontSize: \"16px\" }}>Transposition</p>\n              <input\n                type=\"number\"\n                value={transposition}\n                onChange={(e) => setTransposition(e.currentTarget.value)}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                marginTop: \"5px\",\n                alignItems: \"center\",\n              }}\n            >\n              <p style={{ fontSize: \"16px\" }}>Sustain</p>\n              <input\n                type=\"checkbox\"\n                value={sustain}\n                onChange={(e) => setSustain(e.currentTarget.value)}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                marginTop: \"5px\",\n                alignItems: \"center\",\n              }}\n            >\n              <p style={{ fontSize: \"16px\" }}>Volume</p>\n              <input\n                type=\"number\"\n                value={volume}\n                onChange={(e) => setVolume(e.currentTarget.value)}\n              />\n            </div>\n          </div>\n        </div>\n        <MenuBar\n          isRecording={isRecording}\n          isPlayingRecording={isPlayingRecording}\n          onStartRecording={onStartRecording}\n          onStopRecording={onStopRecording}\n          onPlayRecording={onPlayRecording}\n          onResetRecording={onResetRecording}\n          onLoop={() => setLooping(!looping)}\n        />\n      </header>\n      <PianoWaterfall octaves={9} />\n      <Piano\n        octaves={9}\n        activeNotes={activeNotes}\n        onPlayNote={onPlayNote}\n        onStopNote={onStopNote}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./pages/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}